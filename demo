import React, {useEffect, useState} from 'react';
import './styles/App.css';
import twitterLogo from './assets/twitter-logo.svg';
import abi from "./utils/MyEpicNFT.json";
import {ethers} from "ethers";

// Constants
const LinkedIn_Handle = 'faizan-ahmad-606a4611b/';
const Linkedin_LINK = `https://www.linkedin.com/in/${LinkedIn_Handle}`;
const OPENSEA_LINK = '';
const TOTAL_MINT_COUNT = 50;


const App = () => {

  /*
  * Just a state variable we use to store our user's public wallet. Don't forget to import useState.
  */
  const [currentAccount, setCurrentAccount] = useState("");
  
      const CheckIfWalletIsConnected = () =>{
        const{ethereum} = window;
        if(!ethereum) {
          console.log("Make sure you have Metamask!");
          return;
        }
        else{console.log("We have ethereum object", ethereum);
            }
        /*
    * Check if we're authorized to access the user's wallet
    */
        const accounts =  ethereum.request({ method: 'eth_accounts' });

    
    /* User can have multiple authorized accounts, we grab the first one if its there!
    */
    if (accounts.length !== 0) {
      const account = accounts[0];
      console.log("Found an authorized account:", account);
      setCurrentAccount(account);
    } else {
      console.log("No authorized account found");
    }
      }
  /*
  * Implement your connectWallet method here
  */
  const connectWallet = async () => {
    try {
      const { ethereum } = window;

      if (!ethereum) {
        alert("Get MetaMask!");
        return;
      }

      /*
      * Fancy method to request access to account.
      */
      const accounts = await ethereum.request({ method: "eth_requestAccounts" });

      /*
      * Boom! This should print out public address once we authorize Metamask.
      */
      console.log("Connected", accounts[0]);
      setCurrentAccount(accounts[0]) 
    } catch (error) {
      console.log(error);
    }
  }
const askContractToMintNft = async () => {
  const CONTRACT_ADDRESS = "0x1871b620C1130b0dB0e4152b3d2bf4f9e64d56c3";

  try {
    const { ethereum } = window;

    if (ethereum) {
      const provider = new ethers.providers.Web3Provider(ethereum);
      const signer = provider.getSigner();
      const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, abi.abi, signer);

      console.log("Going to pop wallet now to pay gas...")
      let nftTxn = await connectedContract.makeAnEpicNFT();

      console.log("Mining...please wait.")
      await nftTxn.wait();
      
      console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);

    } else {
      console.log("Ethereum object doesn't exist!");
    }
  } catch (error) {
    console.log(error)
  }
}
  /*
  * This runs our function when the page loads.
  */
  useEffect(()=>{
    CheckIfWalletIsConnected();
  },[])

  
  // Render Methods
  const renderNotConnectedContainer = () => (
    <button onClick={connectWallet} className="cta-button connect-wallet-button">
      Connect to Wallet
    </button>
  );

  const renderMintUI = () => (
    <button onClick={askContractToMintNft} className="cta-button connect-wallet-button">
      Mint NFT
    </button>
  )
  


  
  return (
    <div className="App">
      <div className="container">
        <div className="header-container">
          <p className="header gradient-text">My NFT Collection</p>
          <p className="sub-text">
            Each unique. Each beautiful. Discover your NFT today.
          </p>
          {currentAccount !== "" ?  renderMintUI() : renderNotConnectedContainer() }

        </div>
        <div className="footer-container">
           <img alt="Twitter Logo" className="twitter-logo" src={twitterLogo} />
          <a
            className="footer-text"
            href={Linkedin_LINK}
            target="_blank"
            rel="noreferrer"
          >{`built by @${LinkedIn_Handle}`}</a>
        </div>
      </div>
    </div>
  );
};

export default App;